// Generated by CoffeeScript 1.8.0
var AdminCtrl, PostListCtrl, PostNewCtrl, PostUpdateCtrl,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

AdminCtrl = (function() {
  function AdminCtrl($scope, $location) {
    this.$scope = $scope;
    this.$location = $location;
    this.isActive();
  }

  AdminCtrl.prototype.isActive = function() {
    return this.$scope.isActive = (function(_this) {
      return function(viewLocation) {
        return viewLocation === _this.$location.path();
      };
    })(this);
  };

  return AdminCtrl;

})();

PostNewCtrl = (function() {
  function PostNewCtrl($scope, $state, BlogService) {
    this.$scope = $scope;
    this.$state = $state;
    this.BlogService = BlogService;
    this.savePost = __bind(this.savePost, this);
    this.init();
    this.setNewPost();
    this.$scope.save = this.savePost;
  }

  PostNewCtrl.prototype.init = function() {
    return this.$scope.buttonText = 'Add Post';
  };

  PostNewCtrl.prototype.setNewPost = function() {
    return this.$scope.post = new this.BlogService();
  };

  PostNewCtrl.prototype.savePost = function() {
    return this.$scope.post.$save((function(_this) {
      return function() {
        return _this.$state.go('admin.postViewAll', void 0, {
          reload: true,
          inherit: false,
          notify: true
        });
      };
    })(this));
  };

  return PostNewCtrl;

})();

PostUpdateCtrl = (function() {
  function PostUpdateCtrl($scope, BlogService, $stateParams, $state) {
    this.$scope = $scope;
    this.BlogService = BlogService;
    this.$stateParams = $stateParams;
    this.$state = $state;
    this.update = __bind(this.update, this);
    this.init();
    this.getPost();
    this.$scope.updatePost = this.update;
  }

  PostUpdateCtrl.prototype.init = function() {
    return this.$scope.buttonText = 'Update Post';
  };

  PostUpdateCtrl.prototype.getPost = function() {
    return this.$scope.post = this.BlogService.get({
      id: this.$stateParams.id
    });
  };

  PostUpdateCtrl.prototype.update = function() {
    return this.$scope.post.$update((function(_this) {
      return function() {
        return _this.$state.go('admin.postViewAll', void 0, {
          reload: true,
          inherit: false,
          notify: true
        });
      };
    })(this));
  };

  return PostUpdateCtrl;

})();

PostListCtrl = (function() {
  function PostListCtrl($scope, BlogService, $state) {
    this.$scope = $scope;
    this.BlogService = BlogService;
    this.$state = $state;
    this.deletePost = __bind(this.deletePost, this);
    this.$scope.posts = [];
    this.getPosts();
    this.$scope.deletePost = this.deletePost;
  }

  PostListCtrl.prototype.getPosts = function() {
    this.$scope.loading = true;
    return this.BlogService.query().$promise.then((function(_this) {
      return function(data) {
        return setTimeout(function() {
          _this.$scope.posts = data;
          _this.$scope.loading = false;
          return _this.$scope.$apply();
        }, 2000);
      };
    })(this));
  };

  PostListCtrl.prototype.deletePost = function(post) {
    return post.$delete((function(_this) {
      return function() {
        return _this.$state.go('admin.postViewAll', void 0, {
          reload: true,
          inherit: false,
          notify: true
        });
      };
    })(this));
  };

  return PostListCtrl;

})();

angular.module('myApp.admin.controllers', []).controller('PostNewCtrl', ['$scope', '$state', 'BlogService', PostNewCtrl]).controller('PostUpdateCtrl', ['$scope', 'BlogService', '$stateParams', '$state', PostUpdateCtrl]).controller('PostListCtrl', ['$scope', 'BlogService', '$state', PostListCtrl]).controller('AdminCtrl', ['$scope', '$location', AdminCtrl]);
